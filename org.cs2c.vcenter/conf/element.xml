<?xml version="1.0" encoding="UTF-8"?>
<root>
<directive name="accept_mutex" tips="If accept_mutex is enabled, worker processes will accept new connections by turn. Otherwise, all worker processes will be notified about new connections, and if volume of new connections is low, some of the worker processes may just waste system resources. " scope="events" group="core">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="accept_mutex_delay" tips="If accept_mutex is enabled, specifies the maximum time during which a worker process will try to restart accepting new connections if another worker process is currently accepting new connections. " scope="events" group="core">
<param class="IntParamInput" min="1" max="9999999" units="ms"/>
</directive>
<directive name="daemon" tips="Determines whether nginx should become a daemon. Mainly used during development." scope="main" group="core">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="debug_connection" tips="Enables debugging log for selected client connections." scope="events" group="core" reused="true">
<param class="StringParamInput" tips="similar to '127.0.0.1' or 'localhost' etc."/>
</directive> 
<directive name="debug_points" tips="is used for debugging." scope="main" group="core">
<param class="SelectParamInput" items="abort:stop"/>
</directive>
<directive name="error_log" tips="Configures logging" scope="http:server:location" group="basic" reused="false">
<param class="StringParamInput" tips="This parameter defines a file that will store the log. The special value stderr selects the standard error file. Logging to syslog can be configured by specifying the ��syslog:�� prefix. "/>
<param class="SelectParamInput" items="debug:info:notice:warn:error:crit:alert:emerg" tips="This parameter determines the level of logging, optional."/>
</directive>
<directive name="error_log" tips="Configures logging" scope="main" group="core">
<param class="StringParamInput" tips="This parameter defines a file that will store the log. The special value stderr selects the standard error file. Logging to syslog can be configured by specifying the ��syslog:�� prefix."/>
<param class="SelectParamInput" items="debug:info:notice:warn:error:crit:alert:emerg"  tips="This parameter determines the level of logging, optional." />
</directive>
<directive name="env" tips="This directive allows preserving some of the inherited variables, changing their values, or creating new environment variables." scope="main " group="core" reused="true">
<param class="StringParamInput" tips="Like 'MALLOC_OPTIONS' or 'PERL5LIB=/data/modules' "/>
</directive>
<block name="events" tips="Provides the configuration file context in which the directives that affect connection processing are specified" scope="main" group="core">
</block>
<directive name="include" tips="Includes another file, or files matching the specified mask, into configuration" scope="main" group="core" reused="true">
<param class="StringParamInput" tips="Like 'vhosts/*.conf' or 'mime.types' "/>
</directive>
<directive name="include" tips="Includes another file, or files matching the specified mask, into configuration" scope="exmai" group="others" reused="true">
<param class="StringParamInput" tips="Like 'vhosts/*.conf' or 'mime.types' "/>
</directive>
<directive name="lock_file" tips="nginx uses the locking mechanism to implement accept_mutex and serialize access to shared memory. On most systems the locks are implemented using atomic operations, and this directive is ignored. On other systems the ��lock file�� mechanism is used. This directive specifies a prefix for the names of lock files" scope="main" group="core">
<param class="StringParamInput" tips="Like 'logs/nginx.lock' "/>
</directive>
<directive name="master_process" tips="Determines whether worker processes are started" scope="main " group="core">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="multi_accept" tips="If multi_accept is disabled, a worker process will accept one new connection at a time. Otherwise, a worker process will accept all new connections at a time" scope="events" group="core">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="pcre_jit" tips="Enables or disables the use of 'just-in-time compilation' for the regular expressions known by the time of configuration parsing-----appeared in v1.1.12" scope="main " group="core">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="pid" tips="Defines a file that will store the process ID of the main process" scope="main" group="core">
<param class="StringParamInput" tips="Like 'nginx.pid' "/>
</directive>
<directive name="ssl_engine" tips="Defines the name of the hardware SSL accelerator" scope="main" group="core">
<param class="StringParamInput" />
</directive>
<directive name="timer_resolution" tips="Reduces timer resolution in worker processes" scope="main" group="core">
<param class="IntParamInput" min="1" max="9999999" units="ms"/>
</directive>
<directive name="use" tips="Specifies the connection processing method to use." scope="events" group="core">
<param class="SelectParamInput" items="select:poll:kqueue:epoll:rtsig:/dev/poll:eventport"/>
</directive>
<directive name="user" tips="Defines user and group credentials used by worker processes." scope="main" group="core">
<param class="StringParamInput" tips="user"/>
<param class="StringParamInput" tips="group, optional"/>
</directive>
<directive name="worker_aio_requests" tips="When using aio with the epoll connection processing method, sets the maximum number of outstanding asynchronous I/O operations for a single worker process-----v1.1.4 and v1.0.7" scope="events" group="core">
<param class="IntParamInput" min="1" max="9999999" units="" />
</directive>
<directive name="worker_connections" tips="Sets the maximum number of simultaneous connections that can be opened by a worker process. " scope="events" group="core">
<param class="IntParamInput" min="1" max="9999999" units=""/>
</directive>
<directive name="work_cpu_affinity" tips="Binds worker processes to the sets of CPUs.The directive is only available on FreeBSD and Linux." scope="main" group="core">
<param class="StringParamInput" tips="Like '0001 0010 0100 1000'"/>
</directive>
<directive name="worker_priority" tips="Defines the scheduling priority for worker processes like it is done by the nice command: a negative number means higher priority" scope="main" group="core">
<param class="IntParamInput" min="-20" max="20" units="" default="0"/>
</directive>
<directive name="worker_processes" tips="Defines the number of worker processes. " scope="main" group="core">
<param class="IntParamInput" min="0" max="9999999" units="" default="1" tips=" '0' indecates auto-------The auto parameter is supported starting from versions 1.3.8 and 1.2.5. " />
</directive>
<directive name="worker_rlimit_core" tips="Changes the limit on the largest size of a core file (RLIMIT_CORE) for worker processes." scope="main" group="core">
<param class="IntParamInput" min="1" max="9999999" units="m" />
</directive>
<directive name="worker_rlimit_nofile" tips="Changes the limit on the maximum number of open files (RLIMIT_NOFILE) for worker processes" scope="main" group="core">
<param class="IntParamInput" min="1" max="9999999" units="" />
</directive>
<directive name="worker_rlimit_sigpending" tips="changes the limit on the number of signals that may be queued (RLIMIT_SIGPENDING) for worker processes" scope="main" group="core">
<param class="IntParamInput" min="1" max="9999999" units="" />
</directive>
<directive name="working_directory" tips="Defines the current working directory for a worker process. " scope="main" group="core">
<param class="StringParamInput" />
</directive> 
<directive name="access_log" tips="Sets the path, format, and configuration for a buffered log write " scope="http:server:location:finlocatio:limit_except" group="basic">
<param class="StringParamInput" tips="An empty string means the value is 'off' " />
</directive> 
<directive name="log_format" tips="Specifies log format." scope="http" group="basic">
<param class="StringParamInput" tips="Like 'combined'" />
<param class="StringParamInput" tips="Like '$remote_addr - $remote_user' "/>
</directive> 
<directive name="open_log_file_cache" tips="Defines a cache that stores the file descriptors of frequently used logs whose names contain variables. " scope="http:server:location" group="gzip">
<param class="OptionIntParamInput" name="max" min="0" max="9999999" units="" tips="'0' is off"/>
<param class="OptionIntParamInput " name="inactive" min="1" max="9999999" units="s" default="10s" tips="optional"/>
<param class="OptionIntParamInput " name="min_user"  min="1" max="9999999" units="" default="1" tips="optional"/>
<param class="OptionIntParamInput " name="valid" min="1" max="9999999" units="s:m" default="60s" tips="optional"/>
</directive> 
<directive name="add_before_body" tips="Adds the text returned as a result of processing a given subrequest before the response body." scope="http:server:location" group="others">
<param class="StringParamInput" tips="An empty string means to cancel addition inherited from the previous configuration level " />
</directive> 
<directive name="add_after_body" tips="Adds the text returned as a result of processing a given subrequest after the response body." scope="http:server:location" group="others">
<param class="StringParamInput" tips="An empty string means to cancel addition inherited from the previous configuration level " />
</directive> 
<directive name="addition_types" tips="Allows adding text in responses with the specified MIME types, in addition to 'text/html'--------appeared in v0.7.9" scope="http:server:location" group="others">
<param class="StringParamInput" tips="Like text/html " />
</directive> 
<directive name="add_header" tips="Adds the specified field to a response header provided that the response code equals 200, 201, 204, 206, 301, 302, 303, 304, or 307. A value can contain variables" scope="http:server:location:finlocatio" group="others">
<param class="StringParamInput" tips="The name, like 'Cache-Control'" />
<param class="StringParamInput" tips="The value" />
</directive> 
<directive name="expires" tips="Enables or disables adding or modifying the 'Expires' and 'Cache-Control' response header fields provided that the response code equals 200, 201, 204, 206, 301, 302,,303, 304, or 307." scope="http:server:location:finlocatio" group="others">
<param class="StringParamInput" tips="Can be epoch:max:off or modified, and while filling epoch or max or off, the second parameter need not filled; the modified is optional and is used in v0.7.0 and v0.6.32"/>
<param class="StringParamInput" tips="time-----the '@' prefix can be used in 0.7.9 and 0.6.34"/>
</directive> 
<block name="types" tips="Maps file name extensions to MIME types of responses. " scope="http:server:location" group="basic">
</block>
<directive name="aio" tips="Enables or disables the use of asynchronous file I/O (AIO) on FreeBSD and Linux. ---appeared in 0.8.11" scope="http:server:location " group="gzip" reused="false">
<param class="SelectParamInput" items="on:off:sendfile"/>
</directive> 
<directive name="alias" tips="Defines a replacement for the specified location. For example, with the following configuration " scope="location" group="basic" reused="false">
<param class="StringParamInput" tips="A path" />
</directive> 
<directive name="chunked_transfer_encoding" tips="Allows disabling chunked transfer encoding in HTTP/1.1. It may come in handy when using a software failing to support chunked encoding despite the standard's requirement" scope="http:server:location" group="others" reused="false">
<param class="SelectParamInput" items="on:off "/>
</directive> 
<directive name="client_body_buffer_size" tips="Sets buffer size for reading client request body." scope="http:server:location " group="client">
<param class="StringParamInput " tips="Like 8k|16k" />
</directive> 
<directive name="client_body_in_file_only" tips="Determines whether nginx should save the entire client request body into a file" scope="http:server:location" group="client">
<param class="SelectParamInput" items="on:clean:off "/>
</directive> 
<directive name="client_body_in_single_buffer" tips="Determines whether nginx should save the entire client request body in a single buffer." scope="http:server:location" group="client">
<param class="SelectParamInput" items="on:off "/>
</directive> 
<directive name="client_body_temp_path" tips="Defines a directory for storing temporary files holding client request bodies. Up to three-level subdirectory hierarchy can be used under the specified directory" scope="http:server:location" group="client">
<param class="StringParamInput" tips="The format is like 'path [level1 [level2 [level3]]]'" />
</directive> 
<directive name="client_body_timeout" scope="http:server:location" tips="Defines a timeout for reading client request body" group="client">
<param class="IntParamInput" min="1" max="9999999" units="s"/>
</directive>
<directive name="client_header_buffer_size" tips="Sets buffer size for reading client request header" scope="http:server " group="client">
<param class="OptionIntParamInput " name="max" min="1" max="9999999" units="k:m" />
</directive> 
<directive name="client_header_timeout" scope="http:server" tips="Defines a timeout for reading client request header" group="client">
<param class="IntParamInput" min="1" max="999999" units="s"/>
</directive>
<directive name="client_max_body_size" tips="Sets the maximum allowed size of the client request body" scope="http:server:location" group="client">
<param class="OptionIntParamInput " name="max" min="1" max="9999999" units="m:k" />
</directive> 
<directive name="connection_pool_size" tips="Allows accurate tuning of per-connection memory allocations. " scope="http:server" group="others">
<param class="OptionIntParamInput " name="max" min="1" max="9999999" units="" />
</directive> 
<directive name="default_type" tips="Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the types directive. " scope=" http:server:location" group="basic">
<param class="StringParamInput" tips="" />
</directive> 
<directive name="directio" tips="Enables the use of the O_DIRECT flag (FreeBSD, Linux), the F_NOCACHE flag (Mac OS X), or the directio() function (Solaris), when reading files that are larger than or equal to the specified size-------appeared in version 0.7.7" scope="http:server :location" group="gzip">
<param class="OptionIntParamInput " name="max" min="0" max="9999999" units="m" tips="'0' means off"/>
</directive>
<directive name="direction_alignment" tips="Sets the alignment for directio----appeared in version 0.8.11" scope="http:server:location" group="gzip">
<param class="OptionIntParamInput " name="max" min="0" max="9999999" units="m" />
</directive> 
<directive name="disable_symlinks" tips="Determines how symbolic links should be treated when opening files------appeared in version 1.1.15" scope="http:server:location" group="gzip">
<param class="SelectParamInput" items="on:off:if_not_owner"/>
<param class="StringParamInput" name="from" tips="optional and if select 'off' here is empty" />
</directive> 
<directive name="error_page" tips="Defines the URI that will be shown for the specified errors" scope=" http:server:location:finlocatio" group="basic">
<param class="StringParamInput " tips="e.g. '502 503' or '404 =200' "/>
<param class="StringParamInput" tips="e.g. '/50x.html' " />
</directive>  
<directive name="etag" tips="Enables or disables automatic generation of the 'ETag' response header field for static resources-----appeared in version 1.3.3" scope=" http:server:location" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive> 
<directive name="if_modified_since" tips="Specifies how to compare modification time of a response with the time in the 'If-Modified-Since' request header field-----appeared in version 0.7.24" scope="http:server:location" group="others">
<param class="SelectParamInput" items="off:exact:before"/>
</directive> 
<directive name="ignore_invalid_headers" tips="Controls whether header fields with invalid names should be ignored." scope="http:server " group="basic">
<param class="SelectParamInput" items="on:off "/>
</directive> 
<directive name="internal" tips="Specifies that a given location can only be used for internal requests" scope="location " group="basic">
</directive> 
<directive name="keepalive_disable" tips="Disables keep-alive connections with misbehaving browsers" scope=" http:server:location" group="client">
<param class="TagParamInput" name="none"/>
<param class="TagParamInput" name="msie6"/>
<param class="TagParamInput" name="safari"/>
</directive> 
<directive name="keepalive_requests" tips="Sets the maximum number of requests that can be served through one keep-alive connection-----appeared in version 0.8.0" scope=" http:server:location " group="client">
<param class="IntParamInput" min="1" max="9999999" units=""/>
</directive> 
<directive name="keepalive_timeout" tips="The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. The zero value disables keep-alive client connections. The optional second parameter sets a value in the 'Keep-Alive: timeout=time' response header field. Two parameters may differ. " scope="http:server:location" group="client">
<param class="IntParamInput" min="0" max="9999999" units="s" />
<param class="IntParamInput" min="0" max="9999999" units="s" tips="optional"/>
</directive> 
<directive name="large_client_header_buffers" tips="Sets the maximum number and size of buffers used for reading large client request header. " scope="http:server" group="client">
<param class="IntParamInput" min="0" max="9999999" units=""/>
<param class="IntParamInput" min="0" max="9999999" units="k:m"/>
</directive> 
<directive name="limit_rate" tips="Limits the rate of response transmission to a client " scope="http:server:location:finlocatio" group="basic">
<param class="IntParamInput" min="0" max="9999999" tips="The zero value disables rate limiting"/>
</directive> 
<directive name="limit_rate_after" tips="Sets the initial amount after which the further transmission of a response to a client will be rate limited-----appeared in version 0.8.0" scope=" http:server:location:finlocatio" group="basic">
<param class="IntParamInput" min="0" max="9999999" />
</directive> 
<directive name="lingering_close" tips="Controls how nginx closes client connections. " scope="http:server:location-----appeared in versions 1.1.0 and 1.0.6" group="client">
<param class="SelectParamInput" items="off:on:always" />
</directive> 
<directive name="lingering_time" tips="When lingering_close is in effect, this directive specifies the maximum time during which nginx will process (read and ignore) additional data coming from a client " scope="http:server:location" group="client">
<param class="IntParamInput" min="0" max="9999999" units="s" />
</directive> 
<directive name="lingering_timeout" tips="When lingering_close is in effect, this directive specifies the maximum waiting time for more client data to arrive.  " scope="http:server:location" group="client">
<param class="IntParamInput" min="0" max="9999999" units="s" />
</directive> 
<directive name="listen" tips="Sets the address and port for IP, or the path for a UNIX-domain socket on which the server will accept requests." scope="server " group="basic">
<param class="StringParamInput" tips="Like '127.0.0.1:8000' or 'unix:/var/run/nginx.sock'"/>
</directive> 
<directive name="log_not_found" tips="Enables or disables logging of errors about not found files into error_log " scope="http:server:location" group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="log_subrequest" tips="Enables or disables logging of subrequests into access_log." scope="http:server:location " group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="max_rangers" tips="Limits the maximum allowed number of ranges in byte-range requests----- appeared in version 1.1.2" scope="http:server:location" group="basic">
<param class="IntParamInput" min="0" max="9999999" />
</directive> 
<directive name="merge_slashes" tips="Enables or disables compression of two or more adjacent slashes in a URI into a single slash. " scope="http:server " group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="msie_padding" tips="Enables or disables adding comments to responses for MSIE clients with status greater than 400 to increase the response size to 512 bytes. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="msie_refresh" tips="Enables or disables issuing refreshes instead of redirects for MSIE clients. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="open_file_cache" tips="Configures a cache that can store" scope="http:server:location " group="gzip">
<param  class="StringParamInput" tips="Can be off or the string as 'max=N [inactive=time]'"/>
</directive> 
<directive name="open_file_cache_errors" tips="Enables or disables caching of file lookup errors by open_file_cache." scope="http:server:location " group="gzip">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="open_file_cache_min_uses" tips="Sets the minimum number of file accesses during the period configured by the inactive parameter of the open_file_cache directive, required for a file descriptor to remain open in the cache." scope="http:server:location " group="gzip">
<param class="IntParamInput" min="1" max="9999999" units="" />
</directive> 
<directive name="open_file_cache_valid" tips="Sets a time after which open_file_cache elements should be validated. " scope="http:server:location " group="gzip">
<param class="IntParamInput" min="1" max="9999999" units="s" />
</directive> 
<directive name="port_in_redirect" tips="Enables or disables specifying the port in redirects issued by nginx. " scope="http:server:location" group="basic">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="postpone_output" tips="If possible, the transmission of client data will be postponed until nginx has at least size bytes of data to send. The zero value disables postponing data transmission" scope=" http:server:location" group="client">
<param class="IntParamInput" min="0" max="9999999" units="" />
</directive> 
<directive name="read_ahead" tips="Sets the amount of pre-reading for the kernel when working with file." scope="http:server:location " group="gzip">
<param class="IntParamInput" min="0" max="9999999" units="" />
</directive> 
<directive name="recursive_error_pages" tips="Enables or disables doing several redirects using the error_page directive. " scope=" http:server:location " group="others">
<param class="SelectParamInput" items="off:on" />
</directive> 
<directive name="request_pool_size" tips="Allows accurate tuning of per-request memory allocations." scope="http:server" group="others">
<param class="InttParamInput" min="0" max="9999999" units="k:m" />
</directive> 
<directive name="reset_timeout_connection" tips="Enables or disables resetting timed out connections." scope="http:server:location " group="basic">
<param class="SelectParamInput" items="off:on " />
</directive> 
<directive name="resolver" tips="Configures name servers used to resolve names of upstream servers into addresses" scope=" http:server:location" group="others">
<param class="StringParamInput" tips="Like 127.0.0.1 [::1]:5353"/>
<param class="OptionIntParamInput" name="valid" min="0" max="999" units="s"/>
</directive> 
<directive name="resolver_timeout" tips="Sets a timeout for name resolution" scope=" http:server:location" group="others">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive> 
<directive name="root" tips="Sets the root directory for requests" scope="http:server:location:finlocatio" group="basic">
<param class="StringParamInput" tips="as '/data/w3'"/>
</directive> 
<directive name="satisfy" tips="Allows access if all (all) or at least one (any) of the ngx_http_access_module, ngx_http_auth_basic_module or ngx_http_auth_request_module modules allow access" scope="http:server:location" group="basic">
<param class="SelectParamInput" items="all:any" />
</directive> 
<directive name="satisfy_any" tips="This directive has been replaced by the any parameter of the satisfy directive" scope="http:server:location" group="basic">
<param class="SelectParamInput" items="on:off" />
</directive> 
<directive name="send_lowat" tips="If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on client sockets by using either NOTE_LOWAT flag of the kqueue method or the SO_SNDLOWAT socket option. In both cases the specified size is used" scope="http:server:location" group="client">
<param class="IntParamInput" min="0" max="99999" units=""/>
</directive>  
<directive name="send_timeout" tips="Sets a timeout for transmitting a response to the client" scope=" http:server:location " group="client">
<param class="IntParamInput" min="0" max="99999" units="s"/>
</directive>  
<directive name="sendfile" tips="Enables or disables the use of sendfile()" scope="http:server:location:finlocatio" group="basic">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="sendfile_max_chunk" tips="When set to a non-zero value, limits the amount of data that can be transferred in a single sendfile() call" scope="http:server:location " group="basic">
<param class="IntParamInput" min="0" max="99999" units=""/>
</directive>  
<directive name="server_name" tips="Sets names of a virtual server" scope="server" group="basic">
<param class="StringParamInput" />
</directive>
<directive name="server_name_in_redirect" tips="Enables or disables the use of the primary server name, specified by the server_name directive, in redirects issued by nginx" scope="http:server:location" group="basic">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="server_names_hash_bucket_size" tips="Sets the bucket size for the server names hash tables" scope="http" group="basic">
<param class="StringParamInput" tips="32|64|128"/>
</directive>
<directive name="server_names_hash_max_size" tips="Sets the maximum size of the server names hash tables. " scope="http" group="basic">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>  
<directive name="server_tokens" tips="Enables or disables emitting nginx version in error messages and in the 'Server' response header field. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="tcp_nodelay" tips="Enables or disables the use of the TCP_NODELAY option." scope="http:server:location" group="basic">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="tcp_nopush" tips="Enables or disables the use of the TCP_NOPUSH socket option on FreeBSD or the TCP_CORK socket option on Linux. " scope="http:server:location" group="basic">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="try_files" tips="Checks the existence of files in the specified order and uses the first found file for request processing"  scope="server:location" group="basic">
<param class="StringParamInput" />
</directive>
<directive name="types_hash_bucket_size" tips="Sets the bucket size for the types hash tables. The default value depends on the size of the processor's cache line. " scope="http:server:location " group="gzip">
<param class="StringParamInput" tips="Like 32|64|128"/>
</directive>
<directive name="types_hash_max_size" tips="Sets the maximum size of the types hash tables. " scope=" http:server:location " group="gzip">
<param class="IntParamInput" min="1" max="9999999" units=""/>
</directive>  
<directive name="underscores_in_headers" tips="Enables or disables the use of underscores in client request header fields. " scope="http:server" group="others">
<param class="SelectParamInput" items="on:off " />
</directive> 
<directive name="variables_hash_bucket_size" tips="Sets the bucket size for the variables hash table. " scope="http" group="others">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>  
<directive name="variables_hash_max_size" tips="Sets the maximum size of the variables hash table. " scope="http" group="others">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>  
<directive name="allow" tips="Allows access for the specified network or address." scope="http:server:location:limit_except" group="sercurity">
<param class="StringParamInput" />
</directive>
<directive name="deny" tips="Denies access for the specified network or address." scope="http:server:location:limit_except " group="sercurity">
<param class="StringParamInput" />
</directive>
<directive name="ancient_browser" tips="If any of the specified substrings is found in the 'User-Agent' request header field, the browser will be considered ancient. " scope="http:server:location " group="client">
<param class="StringParamInput" />
</directive>
<directive name="ancient_browser_value" tips="Sets a value for the $ancient_browser variables " scope="http:server:location" group="client">
<param class="StringParamInput" />
</directive>
<directive name="modern_browser" tips="Specifies a version starting from which a browser is considered modern.  " scope="http:server:location " group="client">
<param class="SelectParamInput" items="unlisted:msie:gecko:opera:safari:konqueror " tips="select 'unlisted' and don't set the other parameter" />
<param class="StringParamInput" tips="the version of browser" />
</directive> 
<directive name="modern_browser_value" tips="Sets a value for the $modern_browser variables " scope="http:server:location" group="client">
<param class="StringParamInput" />
</directive>
<directive name="auth_basic" tips="Enables validation of user name and password using the 'HTTP Basic Authentication' protocol." scope="http:server:location:limit_except" group="sercurity">
<param class="StringParamInput" tips="String or off" />
</directive>
<directive name="auth_basic_user" tips="Specifies a file that keeps user names and passwords" scope="http:server:location:limit_except " group="sercurity">
<param class="StringParamInput" />
</directive>
<directive name="auth_http" tips="Sets the URL of the HTTP authentication server. " scope="mail:server" group="sercurity">
<param class="StringParamInput" />
</directive>
<directive name="auth_http_header" tips="Appends the specified header to requests to the authentication server. " scope="mail:server" group="sercurity">
<param class="StringParamInput" />
<param class="StringParamInput" />
</directive>
<directive name="auth_http_timeout" scope="mail:server" group="sercurity">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>  
<directive name="auth_request" tips=" Enables authorization based on the result of a subrequest and sets the URI to which the subrequest will be sent. " scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="Uri or off"/>
</directive>
<directive name="auth_request_set" tips=" Sets the request variable to the given value after the authorization request completes. " scope="http:server:location " group="sercurity">
<param class="StringParamInput" />
<param class="StringParamInput" />
</directive>
<directive name="autoindex" tips="Enables or disables the directory listing output." scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="autoindex_exact_size" tips="Specifies whether exact file sizes should be output in the directory listing, or rather rounded to kilobytes, megabytes, and gigabytes. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="autoindex_localtime" tips="Specifies whether times in the directory listing should be output in the local time zone or UTC. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="break" tips="Stops processing the current set of ngx_http_rewrite_module directives" scope="location:server:if" group="sercurity">
<param class="SelectParamInput" items="on:off"/>
</directive>
<block name="if" tips="The specified condition is evaluated." scope="location:server" group="others">
<param class="StringParamInput" tips="Condition, need to add the parenthesis"/>
</block>
<block name="limit_except" tips="Limits allowed HTTP methods inside a location" scope="location" group="basic">
<param class="StringParamInput"/>
</block>
<directive name="return" tips="Stops processing and returns the specified code to a client" scope="server:location:if" group="client">
<param class="StringParamInput" tips="if the url is filled you need not set the second parameter" />
<param class="StringParamInput"/>
</directive>
<directive name="rewrite" tips="If the specified regular expression matches a URI, the URI is changed as specified in the replacement string." scope="location:server:if" group="sercurity">
<param class="StringParamInput" tips="regular expression" />
<param class="StringParamInput"/>	
<param class="SelectParamInput" items="last:break:redirect" tips="optional"/>
</directive>
<directive name="rewrite_log" tips="Enables or disables logging of ngx_http_rewrite_module module directives processing results into the error_log at the notice level" scope="http:server:location:if" group="sercurity">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="set" tips="Sets a value for the specified variable. A value can contain text, variables, and their combination. " scope="location:server:if" group="others">
<param class="StringParamInput" tips="Fill a variable" />
<param class="StringParamInput"  tips="Fill above variable's value"/>	
</directive>
<directive name="uninitialized_variable_warn" tips="Controls whether warnings about uninitialized variables are logged." scope="http:server:location:if" group="sercurity">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="charset" tips="Adds the specified charset to the 'Content-Type' response header field" scope="location:server:finlocatio:http" group="basic">
<param class="StringParamInput" tips="Fill a variable or off" />	
</directive>
<block name="charset_map" tips="Describes the conversion table from one charset to another. " scope="http" group="basic">
<param class="StringParamInput"/>
<param class="StringParamInput"/>
</block>
<directive name="charset_types" tips="Enables module processing in responses with the specified MIME types in addition to 'text/html'------appeared in version 0.7.9. " scope="location:server: http" group="basic">
<param class="StringParamInput" tips="mime-type" />	
</directive>
<directive name="override_charset" tips="Determines whether a conversion should be performed for answers received from a proxied or FastCGI server when the answers already carry a charset in the 'Content-Type' response header field. " scope="http:server:location:finlocatio" group="basic">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="source_charset " tips="Defines the source charset of a response." scope="location:server: http:finlocatio " group="basic">
<param class="StringParamInput" tips="charset" />	
</directive>
<directive name="dav_access" tips="Sets access permissions for newly created files and directories " scope="location:server:http" group="sercurity">
<param class="StringParamInput" tips="e.g.  user:rw group:rw all:r" />	
</directive>
<directive name="dav_methods" tips="Allows the specified HTTP and WebDAV methods. " scope="http:server:location " group="sercurity">
<param class="TagParamInput" name="off" tips="if check 'off' others can't be checked"/>
<param class="TagParamInput" name="PUT"/>
<param class="TagParamInput" name="DELETE"/>
<param class="TagParamInput" name="MKCOL"/>
<param class="TagParamInput" name="COPY"/>
<param class="TagParamInput" name="MOVE"/>
</directive>
<directive name="create_full_put_path" tips="The WebDAV specification only allows creating files in already existing directories. " scope="http:server:location" group="basic">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="min_delete_depth" tips="Allows the DELETE method to remove files provided that the number of elements in a request path is not less than the specified number." scope="http:server:location" group="gzip">
<param class="IntParamInput" min="0" max="99999" units=""/>
</directive>
<directive name="empty_gif" tips="Turns on module processing in a surrounding location. " scope="location" group="others">
</directive>
<directive name="f4f" tips="Turns on module processing in the surrounding location " scope="location" group="others">
</directive>
<directive name="f4f_buffer_size" tips="Sets the size of a memory buffer used for reading the .f4x index file." scope="http:server:location " group="others">
<param class="IntParamInput" min="1" max="9999999" units="k"/>
</directive>
<directive name="fastcgi_bind" tips="Makes outgoing connections to a FastCGI server originate from the specified local IP address----- appeared in version 0.8.22" scope="http:server:location " group="fastcgi">
<param class="StringParamInput" tips="Fill address or off " />	
</directive>
<directive name="fastcgi_buffer_size" tips="Sets the size of the buffer used for reading the first part of a response received from the FastCGI server. " scope="http:server:location" group="fastcgi">
<param class="StringParamInput" tips="Like 4k|8k"/>
</directive>
<directive name="fastcgi_buffering" tips="Enables or disables buffering of responses from the FastCGI server-----appeared in version 1.5.6" scope="http:server:location " group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_buffers" tips="Sets the number and size of buffers used for reading a response from the FastCGI server, for a single connection. " scope="http:server:location " group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units=""/>
<param class="StringParamInput" tips="Like 4k|8k"/>
</directive>
<directive name="fastcgi_busy_buffers_size" tips="limits the total size of buffers that can be busy sending a response to the client while the response is not yet fully read. " scope="http:server:location " group="fastcgi">
<param class="StringParamInput" tips="Like 8k|16k" />	
</directive>
<directive name="fastcgi_cache" tips="Defines a shared memory zone used for caching." scope="http:server:location" group="fastcgi">
<param class="StringParamInput" tips="Fill zone or off " />	
</directive>
<directive name="	fastcgi_cache_bypass" tips="Defines conditions under which the response will not be taken from a cache." scope="http:server:location " group="fastcgi">
<param class="StringParamInput" tips="Fill zone or off " />	
</directive>
<directive name="fastcgi_cache_key" tips="Defines a key for caching" scope="http:server:location " group="fastcgi">
<param class="StringParamInput" tips=" Like 'localhost:9000$request_uri'" />	
</directive>
<directive name="fastcgi_cache_lock" tips="When enabled, only one request at a time will be allowed to populate a new cache element identified according to the fastcgi_cache_key directive by passing a request to a FastCGI server-----appeared in version 1.1.12" scope="http:server:location " group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_cache_lock_timeout" tips="Sets a timeout for fastcgi_cache_lock-----appeared in version 1.1.12" scope="http:server:location " group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="fastcgi_cache_methods" tips="If the client request method is listed in this directive then the response will be cached-----appeared in version 0.7.59. " scope="http:server:location " group="fastcgi">
<param class="TagParamInput" name="GET"/>
<param class="TagParamInput" name="HEAD"/>
<param class="TagParamInput" name="POST"/>
</directive>
<directive name="fastcgi_cache_min_uses" tips="Sets the number of requests after which the response will be cached." scope="http:server:location" group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>
<directive name="fastcgi_cache_path" tips="Sets the path and other parameters of a cache" scope="http" group="fastcgi">
<param class="StringParamInput" tips=" path" />	
<param class="OptionStringParamInput" name=" levels" />
<param class="OptionStringParamInput" name=" key_zone" />
<param class="OptionIntParamInput" name="inactive" min="1" max="99999" units="s "/>
<param class="OptionIntParamInput" name="max_size" min="1" max="99999" units="k "/>
<param class="OptionIntParamInput" name="loader_files" min="1" max="99999" units=""/>
<param class="OptionIntParamInput" name="loader_sleep" min="1" max="99999" units="ms "/>
<param class="OptionIntParamInput" name="loader_threshold"  min="1" max="99999" units=" ms"/>
</directive>
<directive name="fastcgi_cache_revalidate" tips="Enables revalidation of expired cache items using conditional requests with the 'If-Modified-Since' header field-----appeared in version 1.5.7" scope="http:server:location " group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_cache_use_stale" tips="Determines in which cases a stale cached response can be used when an error occurs during communication with the FastCGI server. " scope="http:server:location" group="fastcgi">
<param class="TagParamInput" name="error "/>
<param class="TagParamInput" name="timeout "/>
<param class="TagParamInput" name="invalid_header "/>
<param class="TagParamInput" name="updating "/>
<param class="TagParamInput" name="http_500 "/>
<param class="TagParamInput" name="http_503 "/>
<param class="TagParamInput" name="http_403 "/>
<param class="TagParamInput" name="http_404 "/>
<param class="TagParamInput" name="off "/>
</directive>
<directive name="fastcgi_cache_valid" tips="Sets caching time for different response codes. " scope="http:server:location " group="fastcgi">
<param class="StringParamInput" tips="Like '200 302'" />	
<param class="IntParamInput" min="1" max="99999" units="m:h"/>
</directive>
<directive name="fastcgi_cache_stderr" tips="Sets a string to search for in the error stream of a response received from a FastCGI server. " scope="http:server:location"  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_connect_timeout" tips="Defines a timeout for establishing a connection with a FastCGI server." scope="http:server:location " group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="fastcgi_hide_header" tips="Sets additional fields that will not be passed. " scope="http:server:location"  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_ignore_client_abort" tips="Determines whether the connection with a FastCGI server should be closed when a client closes a connection without waiting for a response. " scope="http:server:location"  group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_ignore_headers" tips="Disables processing of certain response header fields from the FastCGI server." scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_index" tips="Sets a file name that will be appended after a URI that ends with a slash, in the value of the $fastcgi_script_name variable. " scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_intercept_errors" tips="Determines whether FastCGI server responses with codes greater than or equal to 300 should be passed to a client or be redirected to nginx for processing with the error_page directive." scope="http:server:location "  group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_keep_conn" tips="Instruct a FastCGI server to keep connections open or not-----appeared in version 1.1.4" scope="http:server:location "  group="fastcgi">
<param class="SelectParamInput" items="off:on"/>
</directive>
<directive name="fastcgi_max_temp_file_size" tips="Sets the maximum size of a temporary file. " scope="http:server:location" group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units="m"/>
</directive>
<directive name="fastcgi_next_upstream" tips="Specifies in which cases a request should be passed to the next server" scope="http:server:location"  group="fastcgi">
<param class="TagParamInput" name="error "/>
<param class="TagParamInput" name="timeout "/>
<param class="TagParamInput" name="invalid_header "/>
<param class="TagParamInput" name="updating "/>
<param class="TagParamInput" name="http_500 "/>
<param class="TagParamInput" name="http_503 "/>
<param class="TagParamInput" name="http_403 "/>
<param class="TagParamInput" name="http_404 "/>
<param class="TagParamInput" name="off "/>
</directive>
<directive name="fastcgi_no_cache" tips="Defines conditions under which the response will not be saved to a cache." scope="http:server:location"  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_param" tips="Sets a parameter that should be passed to the FastCGI server." scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" />	
<param class="StringParamInput" />	
<param class="TagParamInput" name="if_not_empty "/>
</directive>
<directive name="fastcgi_pass" tips="Sets the address of a FastCGI server." scope="location:finlocatio"  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_pass_header" tips="Permits passing otherwise disabled header fields from a FastCGI server to a client." scope="location:http:sever "  group="fastcgi">
<param class="StringParamInput" />	
</directive>
<directive name="fastcgi_read_timeout" tips="Defines a timeout for reading a response from the FastCGI server. " scope="http:server:location " group="fastcgi">
<param class="IntParamInput" min="1" max="99999" units="s"  default="60"/>
</directive>
<directive name="fastcgi_pass_request_body" tips="Indicates whether the original request body is passed to the FastCGI server. " scope="http:server:location "  group="fastcgi">
<param class="SelectParamInput" items="off:on" default="on"/>
</directive>
<directive name="fastcgi_pass_request_headers" tips="Indicates whether the header fields of the original request are passed to the FastCGI server." scope="http:server:location"  group="fastcgi">
<param class="SelectParamInput" items="off:on" default="on"/>
</directive>
<directive name="fastcgi_send_lowat" tips="" scope="http:server:location " group="fastcgi">
<param class="IntParamInput" min="0" max="99999" units="" default="0"/>
</directive>
<directive name="fastcgi_send_timeout" tips="Sets a timeout for transmitting a request to the FastCGI server. " scope="http:server:location " group="fastcgi" >
<param class="IntParamInput" min="1" max="99999" units="s" default="60"/>
</directive>
<directive name="fastcgi_split_path_info" tips="Defines a regular expression that captures a value for the $fastcgi_path_info variable." scope="location"  group="fastcgi">
<param class="StringParamInput" tips="regular expression " />	
</directive>
<directive name="fastcgi_store" tips="Enables saving of files to a disk. " scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" tips="Fill on or off or string " default="off" />	
</directive>
<directive name="fastcgi_store_access" tips="Sets access permissions for newly created files and directories" scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" tips="user:rw  group:rw all:r" default="user:rw" />	
</directive>
<directive name="fastcgi_temp_file_write_size" tips="Limits the size of data written to a temporary file at a time, when buffering of responses from the FastCGI server to temporary files is enabled. " scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" tips="Like 8k | 16k" default="8k|16k"/>	
</directive>
<directive name="fastcgi_temp_path" tips="Defines a directory for storing temporary files with data received from FastCGI servers." scope="http:server:location "  group="fastcgi">
<param class="StringParamInput" tips="Like 'path [level1 [level2 [level3]]]'" default="fastcgi_temp"/>	
</directive>
<directive name="flv" tips="Turns on module processing in a surrounding location." scope=" location"  group="others">
</directive>
<block name="geo" tips="Describes the dependency of values of the specified variable on the client IP address. " scope="http"  group="others">
<param class="StringParamInput" tips="optional,$address"/>
<param class="StringParamInput " tips="$variable"/>
<param class="TagParamInput" name="delete "/>
<param class="TagParamInput" name="default "/>
<param class="TagParamInput" name="include"/>
<param class="TagParamInput" name="proxy"/>
<param class="TagParamInput" name="proxy_recursive"/>
<param class="TagParamInput" name="ranges "/>
</block>
<directive name="geoip_country" tips="Specifies a database used to determine the country depending on the client IP address." scope="http"  group="others">
<param class="StringParamInput" tips="file" />	
</directive>
<directive name="geoip_city" tips="Specifies a database used to determine the country, region, and city depending on the client IP address. " scope="http"  group="others">
<param class="StringParamInput" tips="file" />
</directive>
<directive name="geoip_org" tips="Specifies a database used to determine the organization depending on the client IP address-----appeared in version 1.0.3" scope="http"  group="others">
<param class="StringParamInput" tips="file" />	
</directive>
<directive name="geoip_proxy" tips="Defines trusted addresses.-----appeared in versions 1.3.0 and 1.2.1" scope="http"  group="others">
<param class="StringParamInput" tips="Fill address or CIDR" />	
</directive>
<directive name="geoip_proxy_recursive" tips="Sets recursive search is on or off-----appeared in versions 1.3.0 and 1.2.1" scope="http"  group="others">
<param class="SelectParamInput" items="off:on" />
</directive>
<directive name="gunzip" tips="Enables or disables decompression of gzipped responses for clients that lack gzip support." scope="http:server:location"  group="gzip">
<param class="SelectParamInput" items="on:off" default="off"/>
</directive>
<directive name="gunzip_buffers" tips="Sets the number and size of buffers used to decompress a response." scope="http:server:location"  group="gzip">
<param class="StringParamInput" default="32 4k|16 8k"/>
</directive>
<directive name="gzip" tips="Enables or disables gzipping of responses." scope="http:server:location:finlocatio"  group="gzip">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="gzip_buffers" tips="Sets the number and size of buffers used to compress a response." scope="http:server:location"  group="gzip">
<param class="StringParamInput" default="32 4k|16 8k" />
</directive>
<directive name="gzip_disable" tips="Disables gzipping of responses for requests with 'User-Agent' header fields matching any of the specified regular expressions-----appeared in version 0.6.23" scope="http:server:location"  group="gzip">
<param class="StringParamInput" tips="Allow multiple regexes"/>
</directive>
<directive name="gzip_comp_level" tips="Sets a gzip compression level of a response." scope="http:server:location"  group="gzip">
<param class="IntParamInput" min="1" max="9" units="" default="1"/>
</directive>
<directive name="gzip_min_length" tips="Sets the minimum length of a response that will be gzipped. " scope="http:server:location"  group="gzip">
<param class="IntParamInput" min="1" max="9999" units=""/>
</directive>
<directive name="gzip_http_version" tips="Sets the minimum HTTP version of a request required to compress a response. " scope="http:server:location"  group="gzip">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="gzip_proxied" tips="Enables or disables gzipping of responses for proxied requests depending on the request and response." scope="http:server:location "  group="gzip">
<param class="TagParamInput" name="off " default="off"/>
<param class="TagParamInput" name="expired "/>
<param class="TagParamInput" name="no-cache"/>
<param class="TagParamInput" name="no-store "/>
<param class="TagParamInput" name="private "/>
<param class="TagParamInput" name="no_last_modified "/>
<param class="TagParamInput" name="no_etag "/>
<param class="TagParamInput" name="auth "/>
<param class="TagParamInput" name="any "/>
</directive>
<directive name="gzip_types" tips="Enables gzipping of responses for the specified MIME types in addition to 'text/html'." scope="http:server:location"  group="gzip">
<param class="StringParamInput" tips="gzip"/>
</directive>
<directive name="gzip_vary" tips="Enables or disables inserting the 'Vary: Accept-Encoding' response header field if the directives gzip, gzip_static, or gunzip are active. " scope="http:server:location "  group="gzip">
<param class="SelectParamInput" items="on:off" default="off"/>
</directive>
<directive name="server" tips="Defines the address and other parameters of a server." scope="upstream"  group="basic" reused="true">
<param class="StringParamInput" tips="address"/>
<param name="weight" class="OptionIntParamInput" min="1" max="999" units=""/>
<param name="max_fails" class="OptionIntParamInput" min="0" max="999" units=""/>
<param name="fail_timeout" class="OptionIntParamInput" min="1" max="999" units="s"/>
<param name="slow_start" class="OptionIntParamInput" min="0" max="999" units="s"/>
<param class="TagParamInput" name="backup "/>
<param class="TagParamInput" name="down"/>
</directive>
<directive name="zone" scope="upstream" tips="Makes the  group dynamically configurable " group="basic">
<param class="StringParamInput" />
<param class="IntParamInput" min="1" max="9999" units="k:m"/>
</directive>
<directive name="ip_hash" scope="upstream" tips="Specifies that a  group should use a load balancing method where requests are distributed between servers based on client IP addresses." group="basic">
</directive>
<directive name="keepalive" scope="upstream" tips="sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process-----appeared in version 1.1.4" group="basic">
<param class="IntParamInput" min="1" max="9999" units=""/>
</directive>
<directive name="least_conn " scope="upstream" tips="Specifies that a  group should use a load balancing method where a request is passed to the server with the least number of active connections, taking into account weights of servers-----appeared in versions 1.3.1 and 1.2.2" group="basic">
</directive>
<directive name="health_check" tips="Enables periodic health checks of the servers in a  group referenced in the surrounding location. " scope="location"  group="basic">
<param name="interval" class="OptionIntParamInput" min="1" max="9999999" units="s" tips="optional"/>
<param name="fails" class="OptionIntParamInput" min="0" max="9999999" units="" tips="optional"/>
<param name="passes " class="OptionIntParamInput" min="1" max="999" units="" tips="optional"/>
<param name="uri" class="OptionStringParamInput" tips="optional" />
<param name="match" class="OptionStringParamInput" tips="optional" />
</directive>
<block name="match" tips="Defines the named test set used to verify responses to health check requests." scope="http"  group="basic">
<param class="StringParamInput"/>
</block>
<directive name="sticky_cookie_insert" tips="Enables session affinity, which causes requests from the same client to be passed to the same server in a group of servers. " scope="upstream"  group="basic">
<param class="StringParamInput"/>
<param name="expires" class="OptionIntParamInput" min="1" max="999" units="s" tips="optional"/>
<param name="domain" class="OptionStringParamInput" tips="optional"/>
<param name="path" class="OptionStringParamInput" tips="optional"/>
</directive>
<directive name="upstream_conf " scope="location" tips="Turns on the HTTP interface of upstream configuration in the surrounding location. " group="basic">
</directive>
<directive name="hls" scope="location" tips="Turns on HLS streaming in the surrounding location." group="others">
</directive>
<directive name="hls_buffers" scope="http:server:location" tips="Sets the maximum number and size of buffers that are used for reading and writing data frames. " group="others">
<param class="IntParamInput" min="1" max="9999" units=""/>
<param class="IntParamInput" min="1" max="9999" units="k:m"/>
</directive>
<directive name="hls_fragment" scope="http:server:location" tips=" Defines the default fragment length for playlist URIs requested without the 'len' argument." group="others">
<param class="IntParamInput" min="1" max="9999" units="s"/>
</directive>
<directive name="hls_mp4_buffer_size" scope="http:server:location" tips="Sets the initial size of the memory buffer used to process MP4 files." group="others">
<param class="IntParamInput" min="1" max="9999" units="k:m"/>
</directive>
<directive name="hls_mp4_max_buffer_size" scope="http:server:location " tips="During metadata processing, a larger buffer may become necessary." group="others">
<param class="IntParamInput" min="1" max="9999" units="k:m"/>
</directive>
<directive name="image_filter" tips="Sets the type of transformation to perform on images" scope=" location"  group="others">
<param class="StringParamInput" tips="Can be off\test\size\rotate 90|180|270\resize width height\crop width height " />
</directive>
<directive name="image_filter_buffer" tips="Sets the maximum size of the buffer used for reading images. " scope="http:server:location"  group="others">
<param class="IntParamInput" min="1" max="99999" units="k:m"/>
</directive>
<directive name="image_filter_interlace" tips="If enabled, final images will be interlaced. For JPEG, final images will be in 'progressive JPEG' format------ appeared in version 1.3.15." scope="http:server:location"  group="others">
<param class="SelectParamInput" items="off:on" />
</directive>
<directive name="image_filter_jpeg_quality" tips="Sets the desired quality of the transformed JPEG images." scope="http:server:location"  group="others">
<param class="IntParamInput" min="1" max="100" units=""/>
</directive>
<directive name="image_filter_sharpen"  tips="Increases sharpness of the final image. The sharpness percentage can exceed 100. The zero value disables sharpening. Parameter value can contain variables." scope="http:server:location"  group="others">
<param class="IntParamInput" min="0" max="1000" units=""/>
</directive>
<directive name="image_filter_transparency" tips="Defines whether transparency should be preserved when transforming GIF images or PNG images with colors specified by a palette. "  group="others">
<param class="SelectParamInput" items="off:on" />
</directive>
<directive name="imap_auth" scope="server:mail" tips="Sets permitted methods of authentication for IMAP clients."  group="others">
<param class="SelectParamInput" items="login:lain:cram-md5" />
</directive> 
<directive name="imap_capabilities" scope="server:mail" tips="Sets the IMAP protocol extensions list that is passed to the client in response to the CAPABILITY command. "  group="others">
<param class="StringParamInput" tips=""/>
</directive> 
<directive name="imap_client_buffer" scope="server:mail" tips="Sets the IMAP commands read buffer size. "  group="others">
<param class="StringParamInput" default="4k|8k"/>
</directive> 
<directive name="index" scope="http:server:location" tips="Defines files that will be used as an index. "  group="basic">
<param class="StringParamInput" tips=""/>
</directive> 
<directive name="limit_conn" scope="http:server:location" tips="Sets the shared memory zone and the maximum allowed number of connections for a given key value. "  group="basic" reused="true">
<param class="StringParamInput" tips=" zone"/>
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive> 
<directive name="limit_conn_log_level" tips="Sets the desired logging level for cases when the server limits the number of connections-----appeared in version 0.8.18." scope="http:server:location"  group="basic">
<param class="TagParamInput" name="info"/>
<param class="TagParamInput" name="warn "/>
<param class="TagParamInput" name="notice"/>
<param class="TagParamInput" name="error"/>
</directive>
<directive name="limit_conn_status" scope="http:server:location" tips="Sets the status code to return in response to rejected requests-----appeared in version 1.3.15"  group="basic">
<param class="StringParamInput" tips=""/>
</directive> 
<directive name="limit_conn_zone" scope="http" tips="Sets parameters for a shared memory zone that will keep states for various keys."  group="basic">
<param class="StringParamInput" tips=""/>
<param class="StringParamInput" tips=""/>
</directive> 
<directive name="limit_req" tips="Sets the shared memory zone and the maximum burst size of requests." scope="http:server:location " group="sercurity">
<param class="OptionStringParamInput" name="zone" />
<param class="OptionIntParamInput" name="burst" min="1" max="99999" units="" tips="optional"/>
<param class="TagParamInput" name="nodelay " tips="optional"/>
</directive>
<directive name="limit_req_log_level" tips="Sets the desired logging level for cases when the server refuses to process requests due to rate exceeding, or delays request processing-----appeared in version 0.8.18" scope="http:server:location "  group="sercurity">
<param class="TagParamInput" name="info "/>
<param class="TagParamInput" name="warn "/>
<param class="TagParamInput" name="notice"/>
<param class="TagParamInput" name="error"/>
</directive>
<directive name="limit_req_status" scope="http:server:location" tips="Sets the status code to return in response to rejected requests-----appeared in version 1.3.15. "  group="sercurity">
<param class="StringParamInput" tips=""/>
</directive> 
<directive name="limit_req_zone" scope="http" tips="Sets parameters for a shared memory zone that will keep states for various keys."  group="sercurity">
<param class="StringParamInput" tips=""/>
<param class="OptionStringParamInput" name="zone" />
<param class="OptionStringParamInput" name="rate" />
</directive> 
<directive name="listen" tips="Sets the address and port for the socket on which the server will accept requests. " scope="server " group="basic">
<param class="StringParamInput" />
</directive>
<directive name="protocol" tips="Sets the protocol for a proxied server. " scope="server "  group="proxy">
<param class="TagParamInput" name="imap "/>
<param class="TagParamInput" name="pop3 "/>
<param class="TagParamInput" name="smtp"/>
</directive>
<directive name="server_name" tips="Sets the server name that is used " scope="mail:server " group="basic">
<param class="StringParamInput" />
</directive>
<directive name="so_keepalive" tips="Indicates if the 'TCP keepalive'mode should be enabled on the client's connection (SO_KEEPALIVE socket parameter) when connecting to a proxied server. " scope="mail:server " group="basic">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="timeout" scope="mail:server"  group="basic">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="gzip_static" tips="Enables or disables checking the existence of precompressed files." scope="http:server:location " group="gzip">
<param class="SelectParamInput" items="on:off:always"/>
</directive>
<block name="map" tips=" Creates a new variable whose value depends on values of one or more of the source variables specified in the first parameter. " scope="http"  group="others">
<param class="StringParamInput" />
<param class="StringParamInput" tips="variable "/>
</block>
<directive name="map_hash_bucket_size" tips="Sets the bucket size for the map variables hash tables. " scope="http " group="gzip">
<param class="StringParamInput" default="32|64|128" tips="Like '32|64|128'" />
</directive>
<directive name="map_hash_max_size" tips="Sets the maximum size of the map variables hash tables.  " scope="http" group="gzip">
<param class="IntParamInput" min="1" max="9999999" units=""/>
</directive>
<directive name="memcached_bind" tips="Makes outgoing connections to a memcached server originate from the specified local IP address-----appeared in version 0.8.22" scope="http:server:location " group="gzip">
<param class="StringParamInput" tips="address or off"/>
</directive>
<directive name="memcached_buffer_size" tips="Sets the size of the buffer used for reading a response received from the memcached server." scope="http:server:location " group="gzip">
<param class="StringParamInput" tips="Like 4k|8k" default="4k|8k"/>
</directive>
<directive name="memcached_connect_timeout" tips="Defines a timeout for establishing a connection with a memcached server." scope="http:server:location" group="gzip">
<param class="IntParamInput" min="1" max="9999999" units="s"/>
</directive>
<directive name="memcached_gzip_flag" tips="Enables the test for the flag presence in the memcached server response and sets the 'Content-Encoding' response header field to 'gzip' if the flag is set-----appeared in version 1.3.6" scope="http:server:location " group="gzip">
<param class="StringParamInput" tips="flag"/>
</directive>
<directive name="memcached_next_upstream" tips="Specifies in which cases a request should be passed to the next server" scope="http:location:server"  group="gzip">
<param class="TagParamInput" name="error "/>
<param class="TagParamInput" name="timeout "/>
<param class="TagParamInput" name="invalid_response"/>
<param class="TagParamInput" name="not_found "/>
<param class="TagParamInput" name="off"/>
</directive>
<directive name="memcached_pass" tips="Sets the memcached server address." scope="finlocatio:location" group="gzip">
<param class="StringParamInput" tips="address"/>
</directive>
<directive name="memcached_read_timeout" tips="Defines a timeout for reading a response from the memcached server." scope="http:server:location " group="gzip">
<param class="IntParamInput" min="1" max="9999999" units="s"/>
</directive>
<directive name="memcached_send_timeout" tips="Sets a timeout for transmitting a request to the memcached server." scope="http:server:location" group="gzip">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="mp4" tips="Turns on module processing in a surrounding location. " scope="location" group="others">
</directive>
<directive name="mp4_buffer_size" tips="Sets the initial size of a memory buffer used for processing MP4 files" scope="http:server:location " group="others">
<param class="IntParamInput" min="1" max="99999" units="k"/>
</directive>
<directive name="mp4_max_buffer_size" tips="During metadata processing, a larger buffer may become necessary." scope="http:server:location " group="others">
<param class="IntParamInput" min="1" max="99999" units="m"/>
</directive>
<directive name="mp4_limit_rate" tips="Enables or disables rate limiting based on the average bitrate of the MP4 file served. " scope="http:server:location " group="others">
<param class="StringParamInput" tips="on or off or factor "/>
</directive>
<directive name="mp4_limit_rate_after" tips="Limits the rate after sending the specified amount of media data." scope="http:server:location " group="others">
<param class="IntParamInput" min="1" max="9999999" units="m:s"/>
</directive>
<directive name="perl" tips="Sets a Perl handler for the given location." scope="limit_except" group="basic">
<param class="StringParamInput" tips="Like module::function:'sub {  }' "/>
</directive>
<directive name="perl" tips="Sets a Perl handler for the given location." scope="location" group="others">
<param class="StringParamInput" tips="Like module::function:'sub {  }' "/>
</directive>
<directive name="perl_module" tips="Sets an additional path for Perl modules" scope="http" group="others">
<param class="StringParamInput" tips="path"/>
</directive>
<directive name="perl_require" tips="Defines the name of a module that will be loaded during each reconfiguration." scope="http" group="others">
<param class="StringParamInput" tips="Fill module "/>
</directive>
<directive name="perl_set" tips="Installs a Perl handler for the specified variable." scope="http" group="others">
<param class="StringParamInput" tips="Fill variable "/>
<param class="StringParamInput" tips="Like module::function:'sub {  }' "/>
</directive>
<directive name="proxy_bind" tips="Makes outgoing connections to a proxied server originate from the specified local IP address-----appeared in version 0.8.22" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="Fill address or off "/>
</directive>
<directive name="proxy_buffer_size" tips="Sets the size of the buffer used for reading the first part of a response received from the proxied server." scope="http:server:location" group="proxy">
<param class="StringParamInput" default="4k|8k" tips="Like 4k|8k"/>
</directive>
<directive name="proxy_buffering" tips="Enables or disables buffering of responses from the proxied server." scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_buffers" tips="Sets the number and size of buffers used for reading a response from the proxied server, for a single connection." scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units=""/>
<param class="StringParamInput" default="4k|8k" tips="Like 4k|8k"/>
</directive>
<directive name="proxy_buffers_size" tips="limits the total size of buffers that can be busy sending a response to the client while the response is not yet fully read" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="Like 8k|16k"/>
</directive>
<directive name="proxy_cache" tips="Enables or disables buffering of responses from the proxied server." scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="Fill zone or off"/>
</directive>
<directive name="proxy_cache_bypass" tips="Defines conditions under which the response will not be taken from a cache." scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_cache_key" tips="Defines a key for caching" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_cache_lock" tips="When enabled, only one request at a time will be allowed to populate a new cache element identified according to the proxy_cache_key directive by passing a request to a proxied server-----appeared in version 1.1.12" scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_cache_lock_timeout" tips="Sets a timeout for proxy_cache_lock-----appeared in version 1.1.12" scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="proxy_cache_methods" tips="If the client request method is listed in this directive then the response will be cached-----appeared in version 0.7.59" scope="http:location:server "  group="proxy">
<param class="TagParamInput" name="GET"/>
<param class="TagParamInput" name="HEAD "/>
<param class="TagParamInput" name="POST"/>
<param class="TagParamInput" name="..."/>
</directive>
<directive name="proxy_cache_min_users" tips="Sets the number of requests after which the response will be cached. " scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>
<directive name="proxy_cache_path" tips="Sets the path and other parameters of a cache." scope="http" group="proxy">
<param class="StringParamInput" tips="path" />	
<param class="OptionStringParamInput" name="levels" tips="optional" />
<param class="OptionStringParamInput" name="key_zone" />
<param class="OptionIntParamInput" name="inactive" min="1" max="99999" units="s" tips="optional"/>
<param class="OptionIntParamInput" name="max_size" min="1" max="99999" units="k" tips="optional"/>
<param class="OptionIntParamInput" name="loader_files" min="1" max="99999" units="" tips="optional"/>
<param class="OptionIntParamInput" name="loader_sleep" min="1" max="99999" units="ms" tips="optional"/>
<param class="OptionIntParamInput" name="loader_threshold"  min="1" max="99999" units="ms" tips="optional"/>
</directive>
<directive name="proxy_cache_revalidate" tips="Enables revalidation of expired cache items using conditional requests with the 'If-Modified-Since' header field. -----appeared in version 1.5.7" scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_cache_valid" tips="Sets caching time for different response codes" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="optional"/>
<param class="IntParamInput" min="1" max="99999" units="m"/>
</directive>
<directive name="proxy_cache_use_stale" tips="Determines in which cases a stale cached response can be used when an error occurs during communication with the proxied server." scope="http:server:location "  group="proxy">
<param class="TagParamInput" name="error "/>
<param class="TagParamInput" name="timeout "/>
<param class="TagParamInput" name="invalid_header "/>
<param class="TagParamInput" name="updating "/>
<param class="TagParamInput" name="http_500 "/>
<param class="TagParamInput" name="http_503 "/>
<param class="TagParamInput" name="http_403 "/>
<param class="TagParamInput" name="http_404 "/>
<param class="TagParamInput" name="off "/>
</directive>
<directive name="proxy_connect_timeout" tips="Defines a timeout for establishing a connection with a proxied server." scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="s" default="60"/>
</directive>
<directive name="proxy_cookie_domain" tips="Sets a text that should be changed in the domain attribute of the 'Set-Cookie' header fields of a proxied server response-----appeared in version 1.1.15" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="off or domain,if off need not fill the second parameter"/>
<param class="StringParamInput" tips="replacement "/>
</directive>
<directive name="proxy_cookie_path" tips="Sets a text that should be changed in the path attribute of the 'Set-Cookie' header fields of a proxied server response-----appeared in version 1.1.15" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="off or path, if off need not fill the second parameter "/>
<param class="StringParamInput" tips="replacement"/>
</directive>
<directive name="proxy_headers_hash_bucket_size" tips="Sets the bucket size for hash tables used by the proxy_hide_header and proxy_set_header directives." scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="" default="64"/>
</directive>
<directive name="proxy_headers_hash_max_size" tips="Sets the maximum size of hash tables used by the proxy_hide_header and proxy_set_header directives." scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="" default="512"/>
</directive>
<directive name="proxy_hide_header" tips="Sets additional fields that will not be passed" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_http_version" tips="Sets the HTTP protocol version for proxying-----appeared in version 1.1.4" scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="1.0:1.1 "/>
</directive>
<directive name="proxy_ignore_client_abort" tips="Determines whether the connection with a proxied server should be closed when a client closes a connection without waiting for a response. " scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_ignore_headers" tips="Disables processing of certain response header fields from the proxied server" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_intercept_errors" tips="Determines whether proxied responses with codes greater than or equal to 300 should be passed to a client or be redirected to nginx for processing with the error_page directive." scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_max_temp_file_size" tips="Sets the maximum size of a temporary file. " scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="m" default="1024"/>
</directive>
<directive name="proxy_method" tips="Specifies the HTTP method to use in requests forwarded to the proxied server instead of the method from the client request." scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_next_upstream" tips="Specifies in which cases a request should be passed to the next server" scope="http:server:location "  group="proxy">
<param class="TagParamInput" name="error"/>
<param class="TagParamInput" name="timeout "/>
<param class="TagParamInput" name="invalid_header "/>
<param class="TagParamInput" name="updating "/>
<param class="TagParamInput" name="http_500 "/>
<param class="TagParamInput" name="http_503 "/>
<param class="TagParamInput" name="http_403 "/>
<param class="TagParamInput" name="http_404 "/>
<param class="TagParamInput" name="off "/>
</directive>
<directive name="proxy_no_cache" tips="Defines conditions under which the response will not be saved to a cache" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_pass" tips="Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped." scope="limit_except:finlocatio:location" group="proxy">
<param class="StringParamInput" tips="url "/>
</directive>
<directive name="proxy_pass_header " tips="Permits passing otherwise disabled header fields from a proxied server to a client" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="url"/>
</directive>
<directive name="proxy_read_timeout" tips="Defines a timeout for reading a response from the proxied server." scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="proxy_pass_request_body" tips="Indicates whether the original request body is passed to the proxied server" scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_pass_request_headers" tips="Indicates whether the header fields of the original request are passed to the proxied server." scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_redirect" tips="Sets the text that should be changed in the 'Location' and 'Refresh' header fields of a proxied server response." scope="http:server:location" group="proxy">
<param class="StringParamInput" tips="Fill default or off or redirect address"/>
<param class="StringParamInput" tips=" when the first para is redirect address set this parameter"/>
</directive>
<directive name="proxy_send_lowat" tips="If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a proxied server by using either NOTE_LOWAT flag of the kqueue method, or the SO_SNDLOWAT socket option, with the specified size" scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="" default="0"/>
</directive>
<directive name="proxy_send_timeout" tips="Sets a timeout for transmitting a request to the proxied server. " scope="http:server:location" group="proxy">
<param class="IntParamInput" min="1" max="99999" units="s"/>
</directive>
<directive name="proxy_set_body" tips="Allows redefining the request body passed to the proxied server" scope="http:server:location" group="proxy">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_set_header" tips="Allows redefining or appending fields to the request header passed to the proxied server" scope="http:server:location" group="proxy" reused="true">
<param class="StringParamInput" tips="filed "/>
<param class="StringParamInput" tips="value "/>
</directive>
<directive name="proxy_ssl_ciphers" tips="Specifies the enabled ciphers for requests to a proxied HTTPS server-----appeared in version 1.5.6" scope="http:server:location" group="proxy">
<param class="StringParamInput" default="DEFAULT"/>
</directive>
<directive name="proxy_ssl_session_reuse" tips="Determines whether SSL sessions can be reused when working with the proxied server" scope="http:server:location" group="proxy">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="proxy_ssl_protocols" tips="Enables the specified protocols for requests to a proxied HTTPS server-----appeared in version 1.5.6" scope="http:server:location"  group="proxy">
<param class="TagParamInput" name="SSLv2 "/>
<param class="TagParamInput" name="SSLv3 "/>
<param class="TagParamInput" name="TLSv1"/>
<param class="TagParamInput" name=" TLSv1.1"/>
<param class="TagParamInput" name=" TLSv1.2 "/>
</directive>
<directive name="proxy_store" tips="Enables saving of files to a disk." scope="http:server:location"  group="proxy">
<param class="StringParamInput" tips="Fill on or off or string like '/data/www$original_uri' "/>
</directive>
<directive name="proxy_store_access" tips="Sets access permissions for newly created files and directories" scope="http:server:location"  group="proxy">
<param class="StringParamInput" tips="Like 'users:permissions'"/>
</directive>
<directive name="proxy_temp_file_write_size " tips="Limits the size of data written to a temporary file at a time" scope="http:server:location"  group="proxy">
<param class="StringParamInput" tips="Like 8k|16k" default="8k|16k"/>
</directive>
<directive name="proxy_temp_path" tips="Defines a directory for storing temporary files with data received from proxied servers" scope="http:server:location"  group="proxy">
<param class="StringParamInput" tips="Fill 'path [level1 [level2 [level3]]]'"/>
</directive>
<directive name="random_index" tips="Enables or disables module processing in a surrounding location. " scope="location" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="set_real_ip_from" tips="Defines trusted addresses that are known to send correct replacement addresses. " scope="http:server:location"  group="basic">
<param class="StringParamInput" tips="Fill address or CIDR or unix:"/>
</directive> 
<directive name="real_ip_header" tips="Defines a request header field used to send the address for a replacement. " scope="http:server:location"  group="basic">
<param class="StringParamInput" tips="Fill 'field' or 'X-Real-IP' or 'X-Forwarded-For''"/>
</directive>
<directive name="real_ip_recursive" tips="Appeared in versions 1.3.0 and 1.2.1" scope="http:server:location" group="basic">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="referer_hash_bucket_size" tips="Sets the bucket size for the valid referers hash tables-----appeared in version 1.0.5" scope="server:location" group="gzip">
<param class="IntParamInput" min="1" max="99999" units="" default="64"/>
</directive>
<directive name="referrer_hash_max_size" tips="Sets the maximum size of the valid referers hash tables-----appeared in version 1.0.5 " scope="server:location" group="gzip">
<param class="IntParamInput" min="1" max="99999" units="" default="2048"/>
</directive>
<directive name="valid_referers" tips="Specifies the 'Referer' request header field values that will cause the embedded $invalid_referer variable to be set to an empty string" scope="server:location "  group="others">
<param class="TagParamInput" name="none "/>
<param class="TagParamInput" name="blocked"/>
<param class="TagParamInput" name="server_names"/>
<param class="StringParamInput" tips="optional "/>
</directive>
<directive name="secure_link" tips="Defines a string with variables from which the checksum value and lifetime of a link will be extracted. " scope="http:server:location"  group="sercurity">
<param class="StringParamInput" tips="expression"/>
</directive>
<directive name="secure_link_md5" tips="Defines an expression for which the MD5 hash value will be computed and compared with the value passed in a request. " scope="http:server:location"  group="sercurity">
<param class="StringParamInput" tips=" expression "/>
</directive>
<directive name="secure_link_secret" tips=" Defines a secret word used to check authenticity of requested links. " scope="location"  group="sercurity">
<param class="StringParamInput" tips="word"/>
</directive>
<directive name="session_log_format" tips="Specifies the output format of a log." scope="http"  group="basic">
<param class="StringParamInput" tips="name"/>
<param class="StringParamInput" tips="string"/>
</directive>
<directive name="session_log_zone" tips="Sets the path to a log file and configures the shared memory zone that is used to store currently active sessions." scope="http" group="basic">
<param class="StringParamInput" tips=" path" />	
<param class="OptionStringParamInput" name=" zone" />
<param class="OptionStringParamInput" name=" format" tips="optional"/>
<param class="OptionIntParamInput" name="timeout" min="1" max="99999" units="s " tips="the hexadecimal representation,optional" />
<param class="OptionStringParamInput" name="id"  tips="the hexadecimal representation of an MD5 hash" />
<param class="OptionStringParamInput" name=" md5" tips="optional" />
</directive>
<directive name="session_log" tips="Enables the use of the specified session log. " scope="http:server:location" group="basic">
<param class="StringParamInput" tips="Fill name or off"/>
</directive>
<directive name="spdy_headers_comp" tips="Sets the header compression level of a response" scope="server:http" group="others">
<param class="IntParamInput" min="0" max="9" units="" default="0"/>
</directive>
<block name="split_clients" tips=" Creates a variable for A/B testing " scope="http"  group="others">
<param class="StringParamInput" tips=""/>
<param class="StringParamInput" tips="variable "/>
</block>
<directive name="ssi" tips="Enables or disables processing of SSI commands in responses. " scope="http:server:location:finlocatio" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssi_last_modified" tips="Allows preserving the 'Last-Modified' header field from the original response during SSI processing to facilitate response caching-----appeared in version 1.5.1" scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssi_min_file_chunk" tips="Sets the minimum size for parts of a response stored on disk, starting from which it makes sense to send them using sendfile. " scope=" http:server:location" group="others">
<param class="IntParamInput" min="1" max="99999" units="k"/>
</directive>
<directive name="ssi_silent_errors" tips="If enabled, suppresses the output of the '[an error occurred while processing the directive]' string if an error occurred during SSI processing. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssi_types" tips="Enables processing of SSI commands in responses with the specified MIME types in addition to 'text/html'." scope="http:server:location" group="others">
<param class="StringParamInput" tips="mime-type"/>
</directive>
<directive name="ssi_value_length" tips="Sets the maximum length of parameter values in SSI commands" scope="http:server:location" group="others">
<param class="IntParamInput" min="1" max="99999" units=""/>
</directive>
<directive name="ssl" tips="Enables the HTTPS protocol for the given virtual server. " scope="http:server " group="sercurity">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssl_certificate" tips="Specifies a file with the certificate in the PEM format for the given virtual server. " scope="http:server " group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_certificate_key" tips="Specifies a file with the secret key in the PEM format for the given virtual server. " scope="http:server " group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_ciphers" tips="Specifies the enabled ciphers" scope="http:server " group="sercurity">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="ssl_client_certificate" tips="Specifies a file with trusted CA certificates in the PEM format used to verify client certificates and OCSP responses if ssl_stapling is enabled. " scope="http:server" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_crl" tips="Specifies a file with revoked certificates (CRL) in the PEM format used to verify client certificates-----appeared in version 0.8.7" scope="http:server" group="sercurity">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="ssl_dhparam" tips="Specifies a file with DH parameters for EDH ciphers-----appeared in version 0.7.2" scope="http:server" group="sercurity">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="ssl_prefer_server_ciphers" tips="Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols. " scope="http:server" group="sercurity">
<param class="SelectParamInput" items="on:off "/>
</directive>
	<directive name="ssl_protocols" tips="Enables the specified protocols.  " scope="http:server"  group="sercurity">
<param class="TagParamInput" name="SSLv2 "/>
<param class="TagParamInput" name="SSLv3 "/>
<param class="TagParamInput" name="TLSv1"/>
<param class="TagParamInput" name=" TLSv1.1"/>
<param class="TagParamInput" name=" TLSv1.2 "/>
</directive>
<directive name="ssl_session_cache" tips="Sets the types and sizes of caches that store session parameters." scope="http:server " group="sercurity">
<param class="StringParamInput" tips="Fill off or none or [builtin[:size]] [shared:name:size] "/>
</directive>
<directive name="ssl_session_ticket_key" tips="Sets a file with the secret key used to encrypt and decrypt TLS session tickets.-----appeared in version 1.5.7" scope="http:server" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_session_timeout" tips="Specifies a time during which a client may reuse the session parameters stored in a cache." scope="http:server" group="sercurity">
<param class="IntParamInput" min="1" max="99999" units="m"/>
</directive>
<directive name="ssl_stapling" tips="Enables or disables stapling of OCSP responses by the server-----appeared in version 1.3.7" scope="http:server " group="sercurity">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssl_stapling_file" tips="When set, the stapled OCSP response will be taken from the specified file instead of querying the OCSP responder specified in the server certificate-----appeared in version 1.3.7" scope="http:server" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_stapling_responder" tips="Overrides the URL of the OCSP responder specified in the 'Authority Information Access' certificate extension-----appeared in version 1.3.7" scope="http:server" group="sercurity">
<param class="StringParamInput" tips="url"/>
</directive>
<directive name="ssl_stapling_verify" tips="Enables or disables verification of OCSP responses by the server-----appeared in version 1.3.7" scope="http:server " group="sercurity">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssl_trusted_certificate" tips="Specifies a file with trusted CA certificates in the PEM format used to verify client certificates and OCSP responses if ssl_stapling is enabled-----appeared in version 1.3.7" scope="http:server" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_verify_client" tips="Enables verification of client certificates." scope="http:server" group="sercurity">
<param class="SelectParamInput" items="on:off :optional:optional_no_ca"/>
</directive>
<directive name="ssl_verify_depth" tips="Sets the verification depth in the client certificates chain" scope=" http:server " group="sercurity">
<param class="IntParamInput" min="1" max="99999" units="" default="1"/>
</directive>
<directive name="status" tips="The status information will be accessible from the surrounding location. " scope="location" group="others">
</directive>
<directive name="status_format" tips="status information is output in the JSON format." scope="http:server:location " group="others">
<param class="SelectParamInput" items="json:jsonp"/>
<param class="StringParamInput" tips="callback,optional when json is selected"/>
</directive>
<directive name="sub_filter" tips="Sets a string to replace and a replacement string." scope="http:server:location " group="others">
<param class="StringParamInput" tips=""/>
<param class="StringParamInput" tips=""/>
</directive>
<directive name="sub_filter_last_modified" tips="Allows preserving the 'Last-Modified' header field from the original response during replacement to facilitate response caching-----appeared in version 1.5.1" scope="http:server:location " group="others">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="sub_filter_once" tips="Indicates whether to look for a string to replace once or several times. " scope="http:server:location" group="others">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="sub_filter_types" tips="Enables string replacement in responses with the specified MIME types in addition to 'text/html'" scope="http:server:location " group="basic">
<param class="StringParamInput" tips="mime-type"/>
</directive>
<directive name="userid" tips="Enables or disables setting cookies and logging the received cookies" scope="http:server:location" group="sercurity">
<param class="SelectParamInput" items="on:v1:log:off:"/>
</directive>
<directive name="userid_domain" tips="Defines a domain for which the cookie is set. " scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="none means to disable setting of a domain for the cookie. "/>
</directive>
<directive name="userid_expires" tips="Sets a time during which a browser should keep the cookie." scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="Fill time or max or off "/>
</directive>
<directive name="userid_mark" tips="" scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="letter | digit | = | off "/>
</directive>
<directive name="userid_name" tips="Sets the cookie name " scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="name "/>
</directive>
<directive name="userid_p3p" tips="Sets a value for the 'P3P' header field that will be sent along with the cookie." scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="Fill string or none "/>
</directive>
<directive name="userid_path" tips="Defines a path for which the cookie is set. " scope="http:server:location " group="sercurity">
<param class="StringParamInput" tips="path"/>
</directive>
<directive name="userid_service" tips="" scope="location:http:server " group="sercurity">
<param class="StringParamInput" tips="Fill digit or IP address of the server etc."/>
</directive>
<directive name="xml_entities" tips="Specifies the DTD file that declares character entities.  " scope="http:server:location " group="others">
<param class="StringParamInput" tips="path"/>
</directive>
<directive name="xslt_last_modified" tips="Allows preserving the 'Last-Modified' header field from the original response during XSLT transformations to facilitate response caching-----appeared in version 1.5.1" scope="http:server:location " group="others">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="xslt_param" tips="Defines the parameters for XSLT stylesheets. The value is treated as an Xpath expression-----appeared in version 1.1.18" scope="http:server:location" group="others">
<param class="StringParamInput" tips="parameter"/>
<param class="StringParamInput" tips="value"/>
</directive>
<directive name="xslt_string_param" tips=" Defines the string parameters for XSLT stylesheets-----appeared in version 1.1.18" scope="http:server:location" group="others">
<param class="StringParamInput" tips="parameter"/>
<param class="StringParamInput" tips="value"/>
</directive>
<directive name="xslt_stylesheet" tips="Defines the XSLT stylesheet and its optional parameters.  " scope="location" group="others">
<param class="StringParamInput" tips="stylesheet"/>
<param class="StringParamInput" tips="optional"/>
</directive>
<directive name="xslt_types" tips="Enables transformations in responses with the specified MIME types in addition to 'text/xml'" scope="http:server:location" group="others">
<param class="StringParamInput" tips="mime-type"/>
</directive>
<directive name="pop3_auth" tips="Sets permitted methods of authentication for POP3 clients. " scope="mail:server" group="sercurity">
<param class="SelectParamInput" items="plain:apop:cram-md5"/>
</directive>
<directive name="pop3_capabilities" tips="Sets the POP3 protocol extensions list that is passed to the client in response to the CAPA command." scope="mail:server " group="others">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="smtp_auth" tips="Sets permitted methods of SASL authentication for SMTP clients " scope="mail:server " group="sercurity">
<param class="SelectParamInput" items="Like plain, login, cram-md5, etc."/>
</directive>
<directive name="smtp_capabilities" tips="Sets the SMTP protocol extensions list that is passed to the client in response to the EHLO command." scope="mail:server " group="others">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="proxy_buffer" tips="Sets the size of the buffer used for proxying. By default, the buffer size is equal to one memory page." scope="mail:server " group="proxy">
<param class="StringParamInput" tips="Like '4k|8k'" default="4k|8k"/>
</directive>
<directive name="proxy_pass_error_message" tips="Indicates whether to pass the error message obtained during the authentication on the backend to the client. " scope="mail:server" group="proxy">
<param class="SelectParamInput" items="on:off"/>
</directive>
<directive name="proxy_timeout" scope="mail:server "  group="proxy">
<param class="IntParamInput" min="1" max="999999" units="h"/>
</directive>
<directive name="xclient " tips="Enables or disables issuing of the XCLIENT command on connection to the SMTP backend. " scope="mail:server" group="client">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssl" tips="Enables the SSL/TLS protocol for the given server." scope="mail" group="sercurity">
<param class="SelectParamInput" items="on:off "/>
</directive>
<directive name="ssl_certificate" tips="Specifies a file with the certificate in the PEM format for the given server. " scope="mail" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_certificate_key" tips="Specifies a file with the secret key in the PEM format for the given server. " scope="mail" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="ssl_prefer_server_ciphers" tips="Specifies that server ciphers should be preferred over client ciphers when the SSLv3 and TLS protocols are used. " scope="mail" group="sercurity">
<param class="StringParamInput" tips=""/>
</directive>
<directive name="ssl_protocols" tips="Enables the specified protocols.  " scope="mail"  group="sercurity">
<param class="TagParamInput" name="SSLv2 "/>
<param class="TagParamInput" name="SSLv3 "/>
<param class="TagParamInput" name="TLSv1"/>
<param class="TagParamInput" name=" TLSv1.1"/>
<param class="TagParamInput" name=" TLSv1.2 "/>
</directive>
<directive name="ssl_session_cache" tips="Sets the types and sizes of caches that store session parameters." scope="mail" group="sercurity">
<param class="StringParamInput" tips="Fill off or none or [builtin[:size]] [shared:name:size] "/>
</directive>
<directive name="ssl_session_timeout" tips="Specifies a time during which a client may reuse the session parameters stored in a cache." scope="mail" group="sercurity">
<param class="IntParamInput" min="1" max="99999" units="m"/>
</directive><directive name="ssl_session_ticket_key" tips="Sets a file with the secret key used to encrypt and decrypt TLS session tickets.-----appeared in version 1.5.7" scope="mail" group="sercurity">
<param class="StringParamInput" tips="file"/>
</directive>
<directive name="starttls" tips="" scope="mail:server " group="others">
<param class="SelectParamInput" items="on:off:only "/>
</directive>
</root>
